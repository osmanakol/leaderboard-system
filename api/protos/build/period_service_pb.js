// source: period_service.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
goog.exportSymbol('proto.period.service.GetPeriodViaFinishTimes', null, global);
goog.exportSymbol('proto.period.service.GetPeriodViaStartTimes', null, global);
goog.exportSymbol('proto.period.service.PeriodObj', null, global);
goog.exportSymbol('proto.period.service.PeriodObjReply', null, global);
goog.exportSymbol('proto.period.service.PeriodType', null, global);
goog.exportSymbol('proto.period.service.Periods', null, global);
goog.exportSymbol('proto.period.service.PeriodsReply', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.period.service.GetPeriodViaStartTimes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.period.service.GetPeriodViaStartTimes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.period.service.GetPeriodViaStartTimes.displayName = 'proto.period.service.GetPeriodViaStartTimes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.period.service.GetPeriodViaFinishTimes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.period.service.GetPeriodViaFinishTimes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.period.service.GetPeriodViaFinishTimes.displayName = 'proto.period.service.GetPeriodViaFinishTimes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.period.service.Periods = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.period.service.Periods.repeatedFields_, null);
};
goog.inherits(proto.period.service.Periods, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.period.service.Periods.displayName = 'proto.period.service.Periods';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.period.service.PeriodObj = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.period.service.PeriodObj, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.period.service.PeriodObj.displayName = 'proto.period.service.PeriodObj';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.period.service.PeriodObjReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.period.service.PeriodObjReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.period.service.PeriodObjReply.displayName = 'proto.period.service.PeriodObjReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.period.service.PeriodsReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.period.service.PeriodsReply.repeatedFields_, null);
};
goog.inherits(proto.period.service.PeriodsReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.period.service.PeriodsReply.displayName = 'proto.period.service.PeriodsReply';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.period.service.GetPeriodViaStartTimes.prototype.toObject = function(opt_includeInstance) {
  return proto.period.service.GetPeriodViaStartTimes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.period.service.GetPeriodViaStartTimes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.period.service.GetPeriodViaStartTimes.toObject = function(includeInstance, msg) {
  var f, obj = {
    startTime: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.period.service.GetPeriodViaStartTimes}
 */
proto.period.service.GetPeriodViaStartTimes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.period.service.GetPeriodViaStartTimes;
  return proto.period.service.GetPeriodViaStartTimes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.period.service.GetPeriodViaStartTimes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.period.service.GetPeriodViaStartTimes}
 */
proto.period.service.GetPeriodViaStartTimes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStartTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.period.service.GetPeriodViaStartTimes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.period.service.GetPeriodViaStartTimes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.period.service.GetPeriodViaStartTimes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.period.service.GetPeriodViaStartTimes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStartTime();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string start_time = 1;
 * @return {string}
 */
proto.period.service.GetPeriodViaStartTimes.prototype.getStartTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.period.service.GetPeriodViaStartTimes} returns this
 */
proto.period.service.GetPeriodViaStartTimes.prototype.setStartTime = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.period.service.GetPeriodViaFinishTimes.prototype.toObject = function(opt_includeInstance) {
  return proto.period.service.GetPeriodViaFinishTimes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.period.service.GetPeriodViaFinishTimes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.period.service.GetPeriodViaFinishTimes.toObject = function(includeInstance, msg) {
  var f, obj = {
    finishTime: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.period.service.GetPeriodViaFinishTimes}
 */
proto.period.service.GetPeriodViaFinishTimes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.period.service.GetPeriodViaFinishTimes;
  return proto.period.service.GetPeriodViaFinishTimes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.period.service.GetPeriodViaFinishTimes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.period.service.GetPeriodViaFinishTimes}
 */
proto.period.service.GetPeriodViaFinishTimes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFinishTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.period.service.GetPeriodViaFinishTimes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.period.service.GetPeriodViaFinishTimes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.period.service.GetPeriodViaFinishTimes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.period.service.GetPeriodViaFinishTimes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFinishTime();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string finish_time = 1;
 * @return {string}
 */
proto.period.service.GetPeriodViaFinishTimes.prototype.getFinishTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.period.service.GetPeriodViaFinishTimes} returns this
 */
proto.period.service.GetPeriodViaFinishTimes.prototype.setFinishTime = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.period.service.Periods.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.period.service.Periods.prototype.toObject = function(opt_includeInstance) {
  return proto.period.service.Periods.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.period.service.Periods} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.period.service.Periods.toObject = function(includeInstance, msg) {
  var f, obj = {
    periodsList: jspb.Message.toObjectList(msg.getPeriodsList(),
    proto.period.service.PeriodObj.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.period.service.Periods}
 */
proto.period.service.Periods.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.period.service.Periods;
  return proto.period.service.Periods.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.period.service.Periods} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.period.service.Periods}
 */
proto.period.service.Periods.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.period.service.PeriodObj;
      reader.readMessage(value,proto.period.service.PeriodObj.deserializeBinaryFromReader);
      msg.addPeriods(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.period.service.Periods.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.period.service.Periods.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.period.service.Periods} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.period.service.Periods.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPeriodsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.period.service.PeriodObj.serializeBinaryToWriter
    );
  }
};


/**
 * repeated PeriodObj periods = 1;
 * @return {!Array<!proto.period.service.PeriodObj>}
 */
proto.period.service.Periods.prototype.getPeriodsList = function() {
  return /** @type{!Array<!proto.period.service.PeriodObj>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.period.service.PeriodObj, 1));
};


/**
 * @param {!Array<!proto.period.service.PeriodObj>} value
 * @return {!proto.period.service.Periods} returns this
*/
proto.period.service.Periods.prototype.setPeriodsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.period.service.PeriodObj=} opt_value
 * @param {number=} opt_index
 * @return {!proto.period.service.PeriodObj}
 */
proto.period.service.Periods.prototype.addPeriods = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.period.service.PeriodObj, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.period.service.Periods} returns this
 */
proto.period.service.Periods.prototype.clearPeriodsList = function() {
  return this.setPeriodsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.period.service.PeriodObj.prototype.toObject = function(opt_includeInstance) {
  return proto.period.service.PeriodObj.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.period.service.PeriodObj} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.period.service.PeriodObj.toObject = function(includeInstance, msg) {
  var f, obj = {
    startTime: jspb.Message.getFieldWithDefault(msg, 1, ""),
    finishTime: jspb.Message.getFieldWithDefault(msg, 2, ""),
    totalDay: jspb.Message.getFieldWithDefault(msg, 3, 0),
    isActive: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.period.service.PeriodObj}
 */
proto.period.service.PeriodObj.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.period.service.PeriodObj;
  return proto.period.service.PeriodObj.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.period.service.PeriodObj} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.period.service.PeriodObj}
 */
proto.period.service.PeriodObj.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStartTime(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFinishTime(value);
      break;
    case 3:
      var value = /** @type {!proto.period.service.PeriodType} */ (reader.readEnum());
      msg.setTotalDay(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsActive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.period.service.PeriodObj.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.period.service.PeriodObj.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.period.service.PeriodObj} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.period.service.PeriodObj.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStartTime();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFinishTime();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTotalDay();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getIsActive();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional string start_time = 1;
 * @return {string}
 */
proto.period.service.PeriodObj.prototype.getStartTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.period.service.PeriodObj} returns this
 */
proto.period.service.PeriodObj.prototype.setStartTime = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string finish_time = 2;
 * @return {string}
 */
proto.period.service.PeriodObj.prototype.getFinishTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.period.service.PeriodObj} returns this
 */
proto.period.service.PeriodObj.prototype.setFinishTime = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional PeriodType total_day = 3;
 * @return {!proto.period.service.PeriodType}
 */
proto.period.service.PeriodObj.prototype.getTotalDay = function() {
  return /** @type {!proto.period.service.PeriodType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.period.service.PeriodType} value
 * @return {!proto.period.service.PeriodObj} returns this
 */
proto.period.service.PeriodObj.prototype.setTotalDay = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional bool is_active = 4;
 * @return {boolean}
 */
proto.period.service.PeriodObj.prototype.getIsActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.period.service.PeriodObj} returns this
 */
proto.period.service.PeriodObj.prototype.setIsActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.period.service.PeriodObjReply.prototype.toObject = function(opt_includeInstance) {
  return proto.period.service.PeriodObjReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.period.service.PeriodObjReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.period.service.PeriodObjReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    startTime: jspb.Message.getFieldWithDefault(msg, 2, ""),
    finishTime: jspb.Message.getFieldWithDefault(msg, 3, ""),
    totalDay: jspb.Message.getFieldWithDefault(msg, 4, 0),
    isActive: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.period.service.PeriodObjReply}
 */
proto.period.service.PeriodObjReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.period.service.PeriodObjReply;
  return proto.period.service.PeriodObjReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.period.service.PeriodObjReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.period.service.PeriodObjReply}
 */
proto.period.service.PeriodObjReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStartTime(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFinishTime(value);
      break;
    case 4:
      var value = /** @type {!proto.period.service.PeriodType} */ (reader.readEnum());
      msg.setTotalDay(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsActive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.period.service.PeriodObjReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.period.service.PeriodObjReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.period.service.PeriodObjReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.period.service.PeriodObjReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStartTime();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFinishTime();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTotalDay();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getIsActive();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional string _id = 1;
 * @return {string}
 */
proto.period.service.PeriodObjReply.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.period.service.PeriodObjReply} returns this
 */
proto.period.service.PeriodObjReply.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string start_time = 2;
 * @return {string}
 */
proto.period.service.PeriodObjReply.prototype.getStartTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.period.service.PeriodObjReply} returns this
 */
proto.period.service.PeriodObjReply.prototype.setStartTime = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string finish_time = 3;
 * @return {string}
 */
proto.period.service.PeriodObjReply.prototype.getFinishTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.period.service.PeriodObjReply} returns this
 */
proto.period.service.PeriodObjReply.prototype.setFinishTime = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional PeriodType total_day = 4;
 * @return {!proto.period.service.PeriodType}
 */
proto.period.service.PeriodObjReply.prototype.getTotalDay = function() {
  return /** @type {!proto.period.service.PeriodType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.period.service.PeriodType} value
 * @return {!proto.period.service.PeriodObjReply} returns this
 */
proto.period.service.PeriodObjReply.prototype.setTotalDay = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional bool is_active = 5;
 * @return {boolean}
 */
proto.period.service.PeriodObjReply.prototype.getIsActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.period.service.PeriodObjReply} returns this
 */
proto.period.service.PeriodObjReply.prototype.setIsActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.period.service.PeriodsReply.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.period.service.PeriodsReply.prototype.toObject = function(opt_includeInstance) {
  return proto.period.service.PeriodsReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.period.service.PeriodsReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.period.service.PeriodsReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    periodsList: jspb.Message.toObjectList(msg.getPeriodsList(),
    proto.period.service.PeriodObjReply.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.period.service.PeriodsReply}
 */
proto.period.service.PeriodsReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.period.service.PeriodsReply;
  return proto.period.service.PeriodsReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.period.service.PeriodsReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.period.service.PeriodsReply}
 */
proto.period.service.PeriodsReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.period.service.PeriodObjReply;
      reader.readMessage(value,proto.period.service.PeriodObjReply.deserializeBinaryFromReader);
      msg.addPeriods(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.period.service.PeriodsReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.period.service.PeriodsReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.period.service.PeriodsReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.period.service.PeriodsReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPeriodsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.period.service.PeriodObjReply.serializeBinaryToWriter
    );
  }
};


/**
 * repeated PeriodObjReply periods = 1;
 * @return {!Array<!proto.period.service.PeriodObjReply>}
 */
proto.period.service.PeriodsReply.prototype.getPeriodsList = function() {
  return /** @type{!Array<!proto.period.service.PeriodObjReply>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.period.service.PeriodObjReply, 1));
};


/**
 * @param {!Array<!proto.period.service.PeriodObjReply>} value
 * @return {!proto.period.service.PeriodsReply} returns this
*/
proto.period.service.PeriodsReply.prototype.setPeriodsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.period.service.PeriodObjReply=} opt_value
 * @param {number=} opt_index
 * @return {!proto.period.service.PeriodObjReply}
 */
proto.period.service.PeriodsReply.prototype.addPeriods = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.period.service.PeriodObjReply, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.period.service.PeriodsReply} returns this
 */
proto.period.service.PeriodsReply.prototype.clearPeriodsList = function() {
  return this.setPeriodsList([]);
};


/**
 * @enum {number}
 */
proto.period.service.PeriodType = {
  NONE: 0,
  DAILY: 1,
  WEEKLY: 7,
  MONTHLY: 30
};

goog.object.extend(exports, proto.period.service);
